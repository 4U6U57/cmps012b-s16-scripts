#!/bin/bash
# sprint - Grading utility, faster than running

PWD="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CLASSDIR="$(echo $PWD | cut -d '/' -f 1-5)"
CLASS="$(basename $CLASSDIR)"
ASG="$(basename $PWD)"
ASGBIN="$CLASSDIR/bin/$ASG"
ASGDIR="$CLASSDIR/$ASG"
SEPARATE="=================================================="

# Read arguments
FUNC=""
FUNCALL="deduct compile mail export clean help"
FUNCDEFAULT="deduct compile export"
if [[ $@ == "" ]]; then
  FUNC="$FUNCDEFAULT"
else
  for ARG in $@; do
    if echo "$FUNCALL" | grep -Pq "$ARG"; then
      FUNC+=$ARG
      FUNC+=" "
    else
      echo "ERROR: $ARG is not a valid sprint argument"
    fi
  done
fi

# Print welcome message
echo; echo; echo; echo; echo
echo $SEPARATE
echo "SPRINT - faster than running"
echo "CLASS  = $CLASS"
echo "ASG    = $ASG"
echo "MODE   = $FUNC"
echo $SEPARATE

# Declare all functions

verbose() {
  VERBOSE=true
}

forall() {
  CLASSNUM=$(echo $CLASS | cut -d '0' -f 2 | cut -d '-' -f 1)
  cd $ASGDIR
  for STUDENT in $(ls -d */); do
    STUDENTDIR=$ASGDIR/$STUDENT
    STUDENT=$(basename $STUDENT /)
    cd $STUDENTDIR
    echo "$SEPARATE"
    pwd
    $@
  done
}

score() {
  SCOREFILE=".score.s"
  case "$@" in
    init)
      echo "0" > $SCOREFILE
      ;;
    get)
      return $(cat $SCOREFILE)
      ;;
    [0-9]*)
      echo $(($(score get) + ($@))) > $SCOREFILE
  esac
}

deduct() {
  echo
}

compile() {
  DFILEPAT=".d.*.s"
  DFILEBLANK=".d.blank.s"
  GRADEFILE="grade.txt"
  ASGSCORE=20
  forall touch $DFILEBLANK
  scoregen() {
    score init
    for DFILE in $DEFILEPAT; do
      while read LINE; do
        score $(echo $LINE | cut -d "/" -f 1)
      done <$DFILE
    done
  }
  forall scoregen
  scorecap() {
    if [[ $(score get) -gt $ASGSCORE || $(score get) -lt 0 ]]; then
      SCORECAP=$(($ASGSCORE - $(score get)))
      score $SCORECAP
      echo "$SCORECAP / X | OVERRIDE: Score not within range 0-$ASGSCORE" > $DFILEBLANK
    fi
  }
  forall scorecap
  makeavg() {
    CLASSCOUNT=0
    SCORETOTAL=0
    forall CLASSCOUNT = $((CLASSCOUNT + 1))
    forall SCORETOTAL = $((SCORETOTAL + $(score get)))
    CLASSAVG=$((SCORETOTAL / CLASSCOUNT))
  }
  forall rm -f $DFILEBLANK
}

export() {
  echo
}

mail() {
  echo
}

clean() {
  echo
}

help() {
  echo "SPRINT - faster than running"
  echo "USAGE: sprint [commands]"
  echo "Default (no commands): $FUNCDEFAULT"
  echo "All commands: $FUNCALL"
}

for ARG in $FUNC; do
  echo "MODE $ARG"
  $ARG
done
